{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Digital\\\\Desktop\\\\movie\\\\movie\\\\src\\\\Component\\\\cards\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './card.css';\nimport { useEffect, useState } from 'react';\nimport axios from '../../Static/axios';\nimport { API_KEY, img_url } from '../../Static/static';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  const [url, setUrl] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      // console.log(response.data.results)\n      setMovie(response.data.results);\n    });\n  }, []);\n\n  const getId = id => {\n    console.log(id);\n    console.log(\"clicked\");\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then(response => {\n      console.log(response.data.results[0].key);\n      setUrl(response.data.results[0].key);\n    });\n  };\n\n  const opts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: movie.map(obj => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => getId(obj.id),\n          className: \"poster\",\n          src: movie ? `${img_url + obj.backdrop_path}` : \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: url,\n      opts: opts,\n      onReady: this._onReady\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"rtN4Yw1FtoBqcmjKVfIRMj5BZQc=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/Digital/Desktop/movie/movie/src/Component/cards/Card.js"],"names":["React","useEffect","useState","axios","API_KEY","img_url","YouTube","Card","props","movie","setMovie","url","setUrl","get","then","response","data","results","getId","id","console","log","key","opts","height","width","playerVars","autoplay","title","map","obj","backdrop_path","_onReady"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,qBAA/B;AACA,OAAOC,OAAP,MAAoB,eAApB;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAcV,QAAQ,CAAC,EAAD,CAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACRE,IAAAA,KAAK,CAACU,GAAN,CAAUL,KAAK,CAACG,GAAhB,EAAqBG,IAArB,CAA2BC,QAAD,IAAY;AAClC;AACAL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAR;AACH,KAHD;AAIP,GALQ,EAKP,EALO,CAAT;;AAMA,QAAMC,KAAK,GAAEC,EAAD,IAAM;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAlB,IAAAA,KAAK,CAACU,GAAN,CAAW,UAASM,EAAG,mBAAkBf,OAAQ,iBAAjD,EAAmEU,IAAnE,CAAyEC,QAAD,IAAY;AAClFK,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBK,GAArC;AACAV,MAAAA,MAAM,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBK,GAA1B,CAAN;AACD,KAHD;AAKD,GARD;;AAWA,QAAMC,IAAI,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,QAAQ,EAAE;AAFA;AAHD,GAAb;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACQ;AAAA,gBAAKnB,KAAK,CAACoB;AAAX;AAAA;AAAA;AAAA;AAAA,YADR,eAEI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBAEMnB,KAAK,CAACoB,GAAN,CAAWC,GAAD,IAAO;AACf,4BACE;AAAK,UAAA,OAAO,EAAE,MAAIZ,KAAK,CAACY,GAAG,CAACX,EAAL,CAAvB;AAAiC,UAAA,SAAS,EAAC,QAA3C;AAAoD,UAAA,GAAG,EAAGV,KAAK,GAAI,GAAEJ,OAAO,GAACyB,GAAG,CAACC,aAAc,EAAhC,GAAkC,EAAjG;AAAqG,UAAA,GAAG,EAAC;AAAzG;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJD;AAFN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEpB,GAAlB;AAAuB,MAAA,IAAI,EAAEY,IAA7B;AAAmC,MAAA,OAAO,EAAE,KAAKS;AAAjD;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA5CQzB,I;;KAAAA,I;AA8CT,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport './card.css'\r\nimport { useEffect,useState } from 'react'\r\nimport axios from '../../Static/axios'\r\nimport {API_KEY, img_url} from '../../Static/static'\r\nimport YouTube from 'react-youtube'\r\nfunction Card(props) {\r\n  const [movie, setMovie] = useState([])\r\n  const [url, setUrl]=useState([])\r\n  useEffect(() => {\r\n          axios.get(props.url).then((response)=>{\r\n              // console.log(response.data.results)\r\n              setMovie(response.data.results)\r\n          })\r\n  },[])\r\n  const getId=(id)=>{\r\n    console.log(id)\r\n    console.log(\"clicked\")\r\n    axios.get(`/movie/${id}/videos?api_key=${API_KEY}&language=en-US`).then((response)=>{\r\n      console.log(response.data.results[0].key)\r\n      setUrl(response.data.results[0].key)\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '640',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  return (\r\n    <div className='row'>\r\n            <h2>{props.title}</h2>\r\n        <div className='post'>\r\n            {\r\n              movie.map((obj)=>{\r\n                return(\r\n                  <img onClick={()=>getId(obj.id)} className='poster' src={ movie ? `${img_url+obj.backdrop_path}`:\"\"} alt=\"\" />\r\n                  )\r\n              })\r\n            }\r\n\r\n        </div>\r\n        <YouTube videoId={url} opts={opts} onReady={this._onReady} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card"]},"metadata":{},"sourceType":"module"}